from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackContext,
    ContextTypes,
    MessageHandler,
    CallbackQueryHandler,
    filters,
)
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if BOT_TOKEN is None:
    raise ValueError("BOT_TOKEN –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

print(f"–í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: {BOT_TOKEN}")

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"""
#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext) -> None:
    keyboard = []
    await update.message.reply_text("üßëüèª‚Äçüé® –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å! \n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ! ‚úÖ")
    await show_main_menu(update, context)

# –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–í–æ—Ç —á–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω:\n"
        "‚öúÔ∏è /start - –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n"
        "‚ÄºÔ∏è /help - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        "‚öõÔ∏è /menu - –º–µ–Ω—é –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n\n"
        "üìå –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –±–æ–ª—å—à–µ! üìå"
    )
    await update.message.reply_text(text)

#–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def show_main_menu(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üèûÔ∏è –î–∏–∑–∞–π–Ω –ë–ê–ù–ù–ï–†–û–í", url="https://t.me/richter_design1")],
        [InlineKeyboardButton("üåá –î–∏–∑–∞–π–Ω –°–û–¶–°–ï–¢–ï–ô", url="https://t.me/richter_design2")],
        [InlineKeyboardButton("üå† –î–∏–∑–∞–π–Ω –ú–ê–†–ö–ï–¢–ü–õ–ï–ô–°–û–í", url="https://t.me/richter_design4")],
        [InlineKeyboardButton("üíª –î–∏–∑–∞–π–Ω –¢–ê–ü–õ–ò–ù–ö –∏ –°–ê–ô–¢–û–í", url="https://t.me/richter_design3")],
        [InlineKeyboardButton("üé® –ü—Ä–æ—á–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞", url="https://t.me/+eL3QkEuRoMo5ZTYy")],
        [InlineKeyboardButton("üèÜ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", url="https://t.me/+BRNKxgphQLcwOGRi")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=reply_markup)


#–ö–æ–º–∞–Ω–¥–∞ /menu
async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=menu)

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query #–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–∏–∏
    await query.answer() #–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ (–∏–Ω–∞—á–µ –¢–µ–ª–µ–≥—Ä–∞–º –º–æ–∂–µ—Ç "–≤–∏—Å–µ—Ç—å")
    data = query.data #–¥–æ—Å—Ç–∞–µ–º —Ç–æ —Å–∞–º–æ–µ callback_data —Å –∫–Ω–æ–ø–æ–∫

    if data == "random_meme":
        await query.edit_message_text("üì∏ –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º!")
    elif data == "create_meme":
        await query.edit_message_text("üèûÔ∏è –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –º–µ–º–∞!")
        context.user_data["wait_for_photo"] = True #–ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –æ—Ç–ø—Ä–∞–≤–∏–ª–∏, –±–æ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    elif data == "quiz":
        await query.edit_message_text("üî• –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è!")
    elif data == "top":
        await query.edit_message_text("üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å!")

"""–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""



# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
app.add_handler(CommandHandler("start", start))
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
app.add_handler(CommandHandler("help", help))
# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–µ–Ω—é
app.add_handler(CommandHandler("menu", menu_handler))
#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫
app.add_handler(CallbackQueryHandler(handle_buttons))

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
app.run_polling()